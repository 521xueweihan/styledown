#!/usr/bin/env node
var Styledown = require('..'),
    read = require('read-input'),
    mdextract = require('mdextract');

var args = require('minimist')(process.argv.slice(2), {
  boolean: ['inline', 'css', 'js'],
  alias: { h: 'help', v: 'version', i: 'inline' }
});

if (args.help) {
  console.log([
      'Usage:',
      '    styledown [options] FILE',
      '    ... | styledown [options]',
      '    styledown --css > styledown.css',
      '',
      'Options:',
      '    -h, --help         print usage information',
      '    -v, --version      show version info and exit',
      '    -i, --inline       force extracts from inline CSS comments (for piping)',
      '        --css          prints the default CSS',
      '        --js           prints the default JS',
  ].join('\n'));
  process.exit();
}

if (args.version) {
  console.log(require('../package.json').version);
  process.exit();
}

if (args.js) {
  process.stdout.write(require('fs').readFileSync(__dirname + '/../data/styledown.js'));
  process.exit();
}

if (args.css) {
  process.stdout.write(require('fs').readFileSync(__dirname + '/../data/styledown.css'));
  process.exit();
}

read(args._, function (err, res) {
  var data = res.files.map(function (f) {
    if (args.inline || f.name && f.name.match(/(sass|scss|styl|less|css)$/)) {
      return mdextract(f.data, { lang: 'css' }).toMarkdown();
    }else
      return f.data;
  }).join("\n");

  var html = Styledown.parse(data);
  process.stdout.write(html + "\n");
});
